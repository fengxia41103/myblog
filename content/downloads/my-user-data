#cloud-config
password: natalie
ssh_pwauth: true
users:
  - name: fengxia
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCfX48W+OP734cU0rZ+LDeDP7/1inbPr8r4RtFpvy1gwk8bPsxKGHmDc5Q+bx595/CHQn+oWv4OCQChLNBX7sZ7v3EaMXWZkoFadAJSzXINCczzH7xy8SY7GrqYyrZL6Kh5/HLDc1fC3hpu2vyxO7bQGHjqGJrPTL0U8pImTuK4cD1jyb7AakQWymOLDhgFL2JKU7mEgDZ7iSq9+G3dUZoqHOejiTWsOkVkfBPAC3eGjAwIYVhiOSPGHbTWdTvr2PrXW7sMGNbvK0EN/eTVSUWWhMwxnWo5hPYWoo3FpwRtPO4voHaw2sqG+1Iyo1VQfp6pkl6fDuodB6pz+6vDwTXL fengxia@fengxia-lenovo
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: root, www-data, users, sudo, admin, lxd
    shell: /bin/bash

chpasswd:
  list: |
    fengxia:natalie
    root:natalie
  expire: false

package_update: true
package_upgrade: true
packages:
  - [python-dev, python-pip]

write_files:
  - path: /root/wss.sh
    owner: root:root
    content: |
      echo "Installing system packages. Please wait."
      apt update
      apt upgrade
      apt dist-upgrade
      apt-get --assume-yes --option=Dpkg::Options::=--force-confold install git ssh-askpass python-pip libxml2-dev libxslt1-dev libxslt1-dev zlib1g-dev apt-file libgpgme11-dev libffi6 libffi-dev libssl-dev build-essential python3-dev charm lxd   lxd-client bridge-utils htop tree firefox nginx graphviz libmysqlclient-dev graphviz-dev pkg-config libmemcached-dev zlib1g-dev


      echo "Installing Juju."
      apt-get -y purge juju*
      snap install juju --classic
      juju --version
      snap install charm

      echo "Installing python virtualenv."
      pip install pip --upgrade
      pip install --upgrade setuptools
      pip install virtualenv virtualenvwrapper

      echo "Setting up LXD and its networking."
      lxd init --auto
      sed -ie 's/\(^USE_LXD_BRIDGE\).*/\1="true"/' /etc/default/lxd-bridge
      sed -ie 's/\(^LXD_BRIDGE\).*/\1="lxdbr0"/' /etc/default/lxd-bridge
      sed -ie 's/\(^LXD_IPV4_ADDR\).*/\1="10.175.135.1"/' /etc/default/lxd-bridge
      sed -ie 's/\(^LXD_IPV4_NETMASK\).*/\1="255.255.255.0"/' /etc/default/lxd-bridge
      sed -ie 's/\(^LXD_IPV4_NETWORK\).*/\1="10.175.135.1/24"/' /etc/default/lxd-bridge
      sed -ie 's/\(^LXD_IPV4_DHCP_RANGE\).*/\1="10.175.135.2,10.175.135.254"/' /etc/default/lxd-bridge
      sed -ie 's/\(^LXD_IPV4_DHCP_MAX\).*/\1="252"/' /etc/default/lxd-bridge
      sed -ie 's/\(^LXD_IPV4_NAT\).*/\1="true"/' /etc/default/lxd-bridge
      sed -ie 's/\(^LXD_IPV6_PROXY\).*/\1="false"/' /etc/default/lxd-bridge
      dpkg-reconfigure -p medium -f noninteractive lxd
      service lxd-bridge stop
      service lxd restart
      cp /root/.bashrc /home/fengxia
      cp /root/.profile /home/fengxia
      chown -R fengxia:fengxia /home/fengxia/
      chmod -R 755 /home/fengxia/
  - path: /home/fengxia/wss.sh
    owner: fengxia:fengxia
    permission: "0755"
    content: |
      echo "source /usr/local/bin/virtualenvwrapper.sh" >> /home/fengxia/.bashrc
      source /usr/local/bin/virtualenvwrapper.sh
      mkvirtualenv dev
      workon dev
      pip install charm-tools ruamel.yaml glances

      echo "workon dev" >> /home/fengxia/.bashrc
      mkdir /home/fengxia/workspace
      echo "source /usr/local/bin/virtualenvwrapper.sh" >> /home/fengxia/.bashrc
      echo "export JUJU_REPOSITORY=~/workspace/wss/dist" >> /home/fengxia/.bashrc
      echo "export LAYER_PATH=~/workspace/wss/uhm/charms" >> /home/fengxia/.bashrc
      echo "export INTERFACE_PATH=~/workspace/wss/uhm/interfaces" >> /home/fengxia/.bashrc
      echo "workon dev" >> /home/fengxia/.bashrc
      echo "Bootstrap a local controller 'devlocal'. "
      #lxc image import /home/ubuntu/workspace/gold.tar.gz --alias
      #juju/trusty/amd64
      sudo newgrp lxd
      juju status
      juju bootstrap localhost devlocal
      lxc list

      cat << EOF
        To build and deploy UHM charms:

        1. cd ~/workspace
        2. git clone --recursive http://hpcgitlab.labs.lenovo.com/WSS/wss.git
        3. cd ~/workspace/wss
        4. python build.py
        5. python deploy.py uhm/demo.yaml
      EOF

runcmd:
  - bash /root/wss.sh
  - sudo -u fengxia bash /home/fengxia/wss.sh

# This is for pexpect so that it knows when to log in and begin tests
final_message: "SYSTEM READY TO LOG IN"
